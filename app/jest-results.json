{
	"numFailedTestSuites": 0,
	"numFailedTests": 0,
	"numPassedTestSuites": 33,
	"numPassedTests": 182,
	"numPendingTestSuites": 0,
	"numPendingTests": 0,
	"numRuntimeErrorTestSuites": 0,
	"numTodoTests": 0,
	"numTotalTestSuites": 33,
	"numTotalTests": 182,
	"openHandles": [],
	"snapshot": {
		"added": 0,
		"didUpdate": false,
		"failure": false,
		"filesAdded": 0,
		"filesRemoved": 0,
		"filesRemovedList": [],
		"filesUnmatched": 0,
		"filesUpdated": 0,
		"matched": 0,
		"total": 0,
		"unchecked": 0,
		"uncheckedKeysByFile": [],
		"unmatched": 0,
		"updated": 0
	},
	"startTime": 1733271320795,
	"success": true,
	"testResults": [
		{
			"assertionResults": [
				{
					"ancestorTitles": ["Sidebar renders correctly"],
					"duration": 121,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Sidebar renders correctly renders Sidebar links correctly",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 5,
					"retryReasons": [],
					"status": "passed",
					"title": "renders Sidebar links correctly"
				},
				{
					"ancestorTitles": ["Sidebar renders correctly"],
					"duration": 24,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Sidebar renders correctly renders Sidebar correctly for logout state",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "renders Sidebar correctly for logout state"
				}
			],
			"endTime": 1733271322408,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/Sidebar.test.tsx",
			"startTime": 1733271321226,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["Searchbar renders correctly"],
					"duration": 139,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Searchbar renders correctly renders Searchbar component",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "renders Searchbar component"
				},
				{
					"ancestorTitles": ["Searchbar renders correctly"],
					"duration": 89,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Searchbar renders correctly renders Searchbar component with search value",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "renders Searchbar component with search value"
				}
			],
			"endTime": 1733271322526,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/Searchbar.test.tsx",
			"startTime": 1733271321233,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["Graph Sidebar Component"],
					"duration": 279,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Graph Sidebar Component renders GraphSideBar component",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "renders GraphSideBar component"
				},
				{
					"ancestorTitles": ["Graph Sidebar Component"],
					"duration": 169,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Graph Sidebar Component filters nodes based on search query",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 100,
					"retryReasons": [],
					"status": "passed",
					"title": "filters nodes based on search query"
				},
				{
					"ancestorTitles": ["Graph Sidebar Component"],
					"duration": 49,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Graph Sidebar Component handles node click",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "handles node click"
				}
			],
			"endTime": 1733271322847,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/GraphSidebar.test.tsx",
			"startTime": 1733271321206,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["Explore page Component"],
					"duration": 232,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Explore page Component renders the explore page with welcome text",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "renders the explore page with welcome text"
				},
				{
					"ancestorTitles": ["Explore page Component"],
					"duration": 89,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Explore page Component allows users to view the page while not logged in",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "allows users to view the page while not logged in"
				},
				{
					"ancestorTitles": ["Explore page Component"],
					"duration": 104,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Explore page Component renders the mock graph data in the explore page",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "renders the mock graph data in the explore page"
				},
				{
					"ancestorTitles": ["Explore page Component"],
					"duration": 74,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Explore page Component renders the seaerch bar corectly",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "renders the seaerch bar corectly"
				},
				{
					"ancestorTitles": ["Explore page Component"],
					"duration": 36,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Explore page Component handles errors when fetching graphs",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 3,
					"retryReasons": [],
					"status": "passed",
					"title": "handles errors when fetching graphs"
				}
			],
			"endTime": 1733271322867,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/ExplorePage.test.tsx",
			"startTime": 1733271321206,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["POST /api/data/shareGraph"],
					"duration": 1,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "POST /api/data/shareGraph should return status code 405 if method isn't POST",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return status code 405 if method isn't POST"
				},
				{
					"ancestorTitles": ["POST /api/data/shareGraph"],
					"duration": 1,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "POST /api/data/shareGraph should return status code 400 if graphId or email is missing",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return status code 400 if graphId or email is missing"
				},
				{
					"ancestorTitles": ["POST /api/data/shareGraph"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "POST /api/data/shareGraph should return status code 404 for non-existent graph",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return status code 404 for non-existent graph"
				},
				{
					"ancestorTitles": ["POST /api/data/shareGraph"],
					"duration": 1,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "POST /api/data/shareGraph should share graph successfully",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 3,
					"retryReasons": [],
					"status": "passed",
					"title": "should share graph successfully"
				},
				{
					"ancestorTitles": ["POST /api/data/shareGraph"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "POST /api/data/shareGraph should return status code 500 if there was an error sharing the graph",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return status code 500 if there was an error sharing the graph"
				}
			],
			"endTime": 1733271322985,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/backend/shareGraph.test.ts",
			"startTime": 1733271322418,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["Create Account (Landing Page)"],
					"duration": 278,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Create Account (Landing Page) renders Create Account component",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "renders Create Account component"
				},
				{
					"ancestorTitles": ["Create Account (Landing Page)"],
					"duration": 176,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Create Account (Landing Page) renders Google sign-up button",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "renders Google sign-up button"
				},
				{
					"ancestorTitles": ["Create Account (Landing Page)"],
					"duration": 87,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Create Account (Landing Page) allows user to input email",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "allows user to input email"
				},
				{
					"ancestorTitles": ["Create Account (Landing Page)"],
					"duration": 68,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Create Account (Landing Page) allows user to input username",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "allows user to input username"
				},
				{
					"ancestorTitles": ["Create Account (Landing Page)"],
					"duration": 70,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Create Account (Landing Page) allows user to input password",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "allows user to input password"
				},
				{
					"ancestorTitles": ["Create Account (Landing Page)"],
					"duration": 203,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Create Account (Landing Page) does not create account when passwords don't match",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 0,
					"retryReasons": [],
					"status": "passed",
					"title": "does not create account when passwords don't match"
				}
			],
			"endTime": 1733271323155,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/CreateAccount.test.tsx",
			"startTime": 1733271321224,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["GraphObject renders correctly"],
					"duration": 193,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "GraphObject renders correctly renders GraphObject component",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 3,
					"retryReasons": [],
					"status": "passed",
					"title": "renders GraphObject component"
				},
				{
					"ancestorTitles": ["GraphObject renders correctly"],
					"duration": 53,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "GraphObject renders correctly renders GraphObject button",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "renders GraphObject button"
				},
				{
					"ancestorTitles": ["GraphObject renders correctly"],
					"duration": 26,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "GraphObject renders correctly navigates to the correct page when graph title is clicked",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "navigates to the correct page when graph title is clicked"
				}
			],
			"endTime": 1733271323174,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/MyGraphCard.test.tsx",
			"startTime": 1733271322534,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["Edge Component"],
					"duration": 16,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Edge Component debug rendered structure of Edge component",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 0,
					"retryReasons": [],
					"status": "passed",
					"title": "debug rendered structure of Edge component"
				},
				{
					"ancestorTitles": ["Edge Component"],
					"duration": 5,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Edge Component renders Edge component with black color and arrow for causal relationship",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 5,
					"retryReasons": [],
					"status": "passed",
					"title": "renders Edge component with black color and arrow for causal relationship"
				},
				{
					"ancestorTitles": ["Edge Component"],
					"duration": 4,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Edge Component renders Edge component with red color and no arrow for inhibitory relationship",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 4,
					"retryReasons": [],
					"status": "passed",
					"title": "renders Edge component with red color and no arrow for inhibitory relationship"
				}
			],
			"endTime": 1733271323357,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/Edge.test.tsx",
			"startTime": 1733271322877,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["Login Page"],
					"duration": 268,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Login Page renders Login component",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "renders Login component"
				},
				{
					"ancestorTitles": ["Login Page"],
					"duration": 74,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Login Page allows user to input email",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "allows user to input email"
				},
				{
					"ancestorTitles": ["Login Page"],
					"duration": 61,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Login Page allows user to input password",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "allows user to input password"
				},
				{
					"ancestorTitles": ["Login Page"],
					"duration": 254,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Login Page redirects to home on form submit",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "redirects to home on form submit"
				},
				{
					"ancestorTitles": ["Login Page"],
					"duration": 154,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Login Page Create a new account button navigates to /create-account",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "Create a new account button navigates to /create-account"
				},
				{
					"ancestorTitles": ["Login Page"],
					"duration": 44,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Login Page Forgot password link has correct href",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "Forgot password link has correct href"
				},
				{
					"ancestorTitles": ["Login Page"],
					"duration": 126,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Login Page does not log in with invalid credentials",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "does not log in with invalid credentials"
				},
				{
					"ancestorTitles": ["Login Page"],
					"duration": 145,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Login Page triggers Google login redirect",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "triggers Google login redirect"
				}
			],
			"endTime": 1733271323365,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/Login.test.tsx",
			"startTime": 1733271321207,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["CausalDiagram Visualization"],
					"duration": 141,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "CausalDiagram Visualization renders without crashing",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "renders without crashing"
				},
				{
					"ancestorTitles": ["CausalDiagram Visualization"],
					"duration": 26,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "CausalDiagram Visualization renders nodes correctly",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 5,
					"retryReasons": [],
					"status": "passed",
					"title": "renders nodes correctly"
				},
				{
					"ancestorTitles": ["CausalDiagram Visualization"],
					"duration": 68,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "CausalDiagram Visualization renders edges correctly",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 10,
					"retryReasons": [],
					"status": "passed",
					"title": "renders edges correctly"
				},
				{
					"ancestorTitles": ["CausalDiagram Visualization"],
					"duration": 49,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "CausalDiagram Visualization nodes from the same category have the same color",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "nodes from the same category have the same color"
				},
				{
					"ancestorTitles": ["CausalDiagram Visualization"],
					"duration": 18,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "CausalDiagram Visualization sets up OrbitControls for rotation, panning and zooming",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 3,
					"retryReasons": [],
					"status": "passed",
					"title": "sets up OrbitControls for rotation, panning and zooming"
				},
				{
					"ancestorTitles": ["CausalDiagram Visualization"],
					"duration": 38,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "CausalDiagram Visualization hovering over a node dims all other nodes and unrelated edges",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 3,
					"retryReasons": [],
					"status": "passed",
					"title": "hovering over a node dims all other nodes and unrelated edges"
				},
				{
					"ancestorTitles": ["CausalDiagram Visualization"],
					"duration": 57,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "CausalDiagram Visualization clicking a node highlights the path",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "clicking a node highlights the path"
				}
			],
			"endTime": 1733271323455,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/CausalDiagram.test.tsx",
			"startTime": 1733271322856,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["Node Component"],
					"duration": 10,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Node Component debug rendered structure",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 0,
					"retryReasons": [],
					"status": "passed",
					"title": "debug rendered structure"
				},
				{
					"ancestorTitles": ["Node Component"],
					"duration": 10,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Node Component renders correctly",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "renders correctly"
				},
				{
					"ancestorTitles": ["Node Component"],
					"duration": 8,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Node Component displays tooltip on hover",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "displays tooltip on hover"
				},
				{
					"ancestorTitles": ["Node Component"],
					"duration": 23,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Node Component hides tooltip on pointer out",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "hides tooltip on pointer out"
				},
				{
					"ancestorTitles": ["Node Component"],
					"duration": 5,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Node Component increases scale when selected",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "increases scale when selected"
				},
				{
					"ancestorTitles": ["Node Component"],
					"duration": 4,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Node Component handles click events",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "handles click events"
				},
				{
					"ancestorTitles": ["Node Component"],
					"duration": 5,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Node Component renders with the correct color",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 3,
					"retryReasons": [],
					"status": "passed",
					"title": "renders with the correct color"
				},
				{
					"ancestorTitles": ["Node Component"],
					"duration": 3,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Node Component renders with the correct color when selected",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 3,
					"retryReasons": [],
					"status": "passed",
					"title": "renders with the correct color when selected"
				}
			],
			"endTime": 1733271323681,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/Node.test.tsx",
			"startTime": 1733271323182,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["Delete Button Testing"],
					"duration": 233,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Delete Button Testing Delete Button Renders Properly",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "Delete Button Renders Properly"
				},
				{
					"ancestorTitles": ["Delete Button Testing"],
					"duration": 211,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Delete Button Testing Verify Delete Button Called with proper Input",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 3,
					"retryReasons": [],
					"status": "passed",
					"title": "Verify Delete Button Called with proper Input"
				}
			],
			"endTime": 1733271323721,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/Delete.test.tsx",
			"startTime": 1733271323004,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["GET /api/data/getSharedGraphs"],
					"duration": 1,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "GET /api/data/getSharedGraphs should return status code 405 if method isn't GET",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return status code 405 if method isn't GET"
				},
				{
					"ancestorTitles": ["GET /api/data/getSharedGraphs"],
					"duration": 1,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "GET /api/data/getSharedGraphs should return status code 400 if email is missing",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return status code 400 if email is missing"
				},
				{
					"ancestorTitles": ["GET /api/data/getSharedGraphs"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "GET /api/data/getSharedGraphs should return shared graphs successfully",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return shared graphs successfully"
				},
				{
					"ancestorTitles": ["GET /api/data/getSharedGraphs"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "GET /api/data/getSharedGraphs should return status code 500 if there was an error getting shared graphs",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return status code 500 if there was an error getting shared graphs"
				}
			],
			"endTime": 1733271323728,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/backend/getSharedGraphs.test.ts",
			"startTime": 1733271323180,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["Presets"],
					"duration": 415,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Presets displays presets in the sidebar",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "displays presets in the sidebar"
				},
				{
					"ancestorTitles": ["Presets"],
					"duration": 85,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Presets loads a preset when clicked",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "loads a preset when clicked"
				},
				{
					"ancestorTitles": ["Presets"],
					"duration": 397,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Presets saves a new preset",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 3,
					"retryReasons": [],
					"status": "passed",
					"title": "saves a new preset"
				},
				{
					"ancestorTitles": ["Presets"],
					"duration": 60,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Presets deletes a preset",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 3,
					"retryReasons": [],
					"status": "passed",
					"title": "deletes a preset"
				},
				{
					"ancestorTitles": ["Presets"],
					"duration": 296,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Presets shows error toast when saving preset fails",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "shows error toast when saving preset fails"
				},
				{
					"ancestorTitles": ["Presets"],
					"duration": 36,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Presets shows error toast when deleting preset fails",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "shows error toast when deleting preset fails"
				}
			],
			"endTime": 1733271323782,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/Presets.test.tsx",
			"startTime": 1733271321229,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["POST /api/data/fetchPublicGraphs"],
					"duration": 1,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "POST /api/data/fetchPublicGraphs should return 405 for non-POST requests",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return 405 for non-POST requests"
				},
				{
					"ancestorTitles": ["POST /api/data/fetchPublicGraphs"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "POST /api/data/fetchPublicGraphs should fetch all public graphs for unauthenticated user",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 3,
					"retryReasons": [],
					"status": "passed",
					"title": "should fetch all public graphs for unauthenticated user"
				},
				{
					"ancestorTitles": ["POST /api/data/fetchPublicGraphs"],
					"duration": 1,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "POST /api/data/fetchPublicGraphs should fetch all public graphs not owned by a specific user",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 4,
					"retryReasons": [],
					"status": "passed",
					"title": "should fetch all public graphs not owned by a specific user"
				},
				{
					"ancestorTitles": ["POST /api/data/fetchPublicGraphs"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "POST /api/data/fetchPublicGraphs should return 500 if an error occurs",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return 500 if an error occurs"
				}
			],
			"endTime": 1733271323807,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/backend/getPublicGraphs.test.ts",
			"startTime": 1733271323382,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["POST /api/data/unshareGraph"],
					"duration": 2,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "POST /api/data/unshareGraph should return status code 405 if method isn't POST",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return status code 405 if method isn't POST"
				},
				{
					"ancestorTitles": ["POST /api/data/unshareGraph"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "POST /api/data/unshareGraph should return status code 400 if graphId or email is missing",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return status code 400 if graphId or email is missing"
				},
				{
					"ancestorTitles": ["POST /api/data/unshareGraph"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "POST /api/data/unshareGraph should return status code 404 for non-existent graph",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return status code 404 for non-existent graph"
				},
				{
					"ancestorTitles": ["POST /api/data/unshareGraph"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "POST /api/data/unshareGraph should unshare graph successfully",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 3,
					"retryReasons": [],
					"status": "passed",
					"title": "should unshare graph successfully"
				},
				{
					"ancestorTitles": ["POST /api/data/unshareGraph"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "POST /api/data/unshareGraph should return status code 404 if user not found in sharing list",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return status code 404 if user not found in sharing list"
				},
				{
					"ancestorTitles": ["POST /api/data/unshareGraph"],
					"duration": 1,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "POST /api/data/unshareGraph should return status code 500 if there was an error unsharing the graph",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return status code 500 if there was an error unsharing the graph"
				}
			],
			"endTime": 1733271323888,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/backend/unshareGraph.test.ts",
			"startTime": 1733271323364,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["POST /api/auth/createUser"],
					"duration": 2,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "POST /api/auth/createUser Should return status code: 405 if method is not POST",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "Should return status code: 405 if method is not POST"
				},
				{
					"ancestorTitles": ["POST /api/auth/createUser"],
					"duration": 1,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "POST /api/auth/createUser It should return status code: 400 if required fields are missing",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "It should return status code: 400 if required fields are missing"
				},
				{
					"ancestorTitles": ["POST /api/auth/createUser"],
					"duration": 5,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "POST /api/auth/createUser It should create an auth user and return status code: 200",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "It should create an auth user and return status code: 200"
				}
			],
			"endTime": 1733271323889,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/backend/createAuthAccount.test.ts",
			"startTime": 1733271323460,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["API /api/data/presets", "POST /addPreset"],
					"duration": 1,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "API /api/data/presets POST /addPreset should return 405 for non-POST requests",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "should return 405 for non-POST requests"
				},
				{
					"ancestorTitles": ["API /api/data/presets", "POST /addPreset"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "API /api/data/presets POST /addPreset should return 400 if graphId or preset is missing",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "should return 400 if graphId or preset is missing"
				},
				{
					"ancestorTitles": ["API /api/data/presets", "POST /addPreset"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "API /api/data/presets POST /addPreset should add a preset successfully",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should add a preset successfully"
				},
				{
					"ancestorTitles": ["API /api/data/presets", "DELETE /deletePreset"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "API /api/data/presets DELETE /deletePreset should return 405 for non-DELETE requests",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "should return 405 for non-DELETE requests"
				},
				{
					"ancestorTitles": ["API /api/data/presets", "DELETE /deletePreset"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "API /api/data/presets DELETE /deletePreset should return 400 if graphId or presetName is missing",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "should return 400 if graphId or presetName is missing"
				},
				{
					"ancestorTitles": ["API /api/data/presets", "DELETE /deletePreset"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "API /api/data/presets DELETE /deletePreset should delete a preset successfully",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should delete a preset successfully"
				},
				{
					"ancestorTitles": ["API /api/data/presets", "GET /getPresets"],
					"duration": 1,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "API /api/data/presets GET /getPresets should return 405 for non-GET requests",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "should return 405 for non-GET requests"
				},
				{
					"ancestorTitles": ["API /api/data/presets", "GET /getPresets"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "API /api/data/presets GET /getPresets should return 400 if graphId is missing",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "should return 400 if graphId is missing"
				},
				{
					"ancestorTitles": ["API /api/data/presets", "GET /getPresets"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "API /api/data/presets GET /getPresets should fetch all presets successfully",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should fetch all presets successfully"
				},
				{
					"ancestorTitles": ["API /api/data/presets", "GET /getPreset"],
					"duration": 1,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "API /api/data/presets GET /getPreset should return 405 for non-GET requests",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "should return 405 for non-GET requests"
				},
				{
					"ancestorTitles": ["API /api/data/presets", "GET /getPreset"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "API /api/data/presets GET /getPreset should return 400 if graphId or presetName is missing",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "should return 400 if graphId or presetName is missing"
				},
				{
					"ancestorTitles": ["API /api/data/presets", "GET /getPreset"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "API /api/data/presets GET /getPreset should fetch a single preset successfully",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should fetch a single preset successfully"
				}
			],
			"endTime": 1733271323944,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/backend/backendPresets.test.tsx",
			"startTime": 1733271323724,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["GraphPage Component"],
					"duration": 3,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "GraphPage Component renders loading component when loading is true",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "renders loading component when loading is true"
				},
				{
					"ancestorTitles": ["GraphPage Component"],
					"duration": 12,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "GraphPage Component fetches graph data when firebaseUser and id are available",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 7,
					"retryReasons": [],
					"status": "passed",
					"title": "fetches graph data when firebaseUser and id are available"
				},
				{
					"ancestorTitles": ["GraphPage Component"],
					"duration": 13,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "GraphPage Component redirects to /home when graph data is invalid",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "redirects to /home when graph data is invalid"
				},
				{
					"ancestorTitles": ["GraphPage Component"],
					"duration": 12,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "GraphPage Component redirects to /undefined when graph is not found",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "redirects to /undefined when graph is not found"
				},
				{
					"ancestorTitles": ["GraphPage Component"],
					"duration": 20,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "GraphPage Component handles adding a new diagram",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "handles adding a new diagram"
				},
				{
					"ancestorTitles": ["GraphPage Component"],
					"duration": 32,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "GraphPage Component handles removing a diagram",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "handles removing a diagram"
				},
				{
					"ancestorTitles": ["GraphPage Component"],
					"duration": 10,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "GraphPage Component handles node selection",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "handles node selection"
				}
			],
			"endTime": 1733271324042,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/GraphPage.test.tsx",
			"startTime": 1733271323736,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["Forgot Password (Landing Page)"],
					"duration": 51,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Forgot Password (Landing Page) renders Forgot Password component",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "renders Forgot Password component"
				},
				{
					"ancestorTitles": ["Forgot Password (Landing Page)"],
					"duration": 44,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Forgot Password (Landing Page) allows user to input email",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "allows user to input email"
				}
			],
			"endTime": 1733271324124,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/ForgotPassword.test.tsx",
			"startTime": 1733271323810,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["GET /api/users/[uid]"],
					"duration": 3,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "GET /api/users/[uid] It should return status code: 405 if method isn't GET",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "It should return status code: 405 if method isn't GET"
				},
				{
					"ancestorTitles": ["GET /api/users/[uid]"],
					"duration": 1,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "GET /api/users/[uid] It should return status code: 400 if uid isn't passed",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "It should return status code: 400 if uid isn't passed"
				},
				{
					"ancestorTitles": ["GET /api/users/[uid]"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "GET /api/users/[uid] It should return status code: 400 if uid is the wrong type (not string)",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "It should return status code: 400 if uid is the wrong type (not string)"
				},
				{
					"ancestorTitles": ["GET /api/users/[uid]"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "GET /api/users/[uid] should return 200 and user data if user document is found",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return 200 and user data if user document is found"
				}
			],
			"endTime": 1733271324159,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/backend/getUser.test.ts",
			"startTime": 1733271323947,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["POST /api/graphs/createGraph"],
					"duration": 1,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "POST /api/graphs/createGraph should return status code:405 if method is not POST",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return status code:405 if method is not POST"
				},
				{
					"ancestorTitles": ["POST /api/graphs/createGraph"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "POST /api/graphs/createGraph should return status code: 400 if owner or graphName is missing",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return status code: 400 if owner or graphName is missing"
				},
				{
					"ancestorTitles": ["POST /api/graphs/createGraph"],
					"duration": 1,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "POST /api/graphs/createGraph should create a graph and return status code: 200",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 3,
					"retryReasons": [],
					"status": "passed",
					"title": "should create a graph and return status code: 200"
				},
				{
					"ancestorTitles": ["POST /api/graphs/createGraph"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "POST /api/graphs/createGraph should return status code: 500 if there is an error creating the graph",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return status code: 500 if there is an error creating the graph"
				}
			],
			"endTime": 1733271324164,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/backend/createGraph.test.ts",
			"startTime": 1733271323892,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["ExploreGraphCard"],
					"duration": 51,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "ExploreGraphCard renders ExploreGraphCard component",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 3,
					"retryReasons": [],
					"status": "passed",
					"title": "renders ExploreGraphCard component"
				},
				{
					"ancestorTitles": ["ExploreGraphCard"],
					"duration": 27,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "ExploreGraphCard navigates to the correct page when Open button is clicked",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "navigates to the correct page when Open button is clicked"
				}
			],
			"endTime": 1733271324186,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/ExploreGraphCard.test.tsx",
			"startTime": 1733271323820,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["GET /api/graphs/fetchGraphs"],
					"duration": 2,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "GET /api/graphs/fetchGraphs should return status code: 405 if the method is not GET",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return status code: 405 if the method is not GET"
				},
				{
					"ancestorTitles": ["GET /api/graphs/fetchGraphs"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "GET /api/graphs/fetchGraphs should return status code: 400 if UID is missing or invalid",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return status code: 400 if UID is missing or invalid"
				},
				{
					"ancestorTitles": ["GET /api/graphs/fetchGraphs"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "GET /api/graphs/fetchGraphs should fetch graphs and return status code: 200",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should fetch graphs and return status code: 200"
				},
				{
					"ancestorTitles": ["GET /api/graphs/fetchGraphs"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "GET /api/graphs/fetchGraphs should return status code: 500 if there is an error fetching graphs",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return status code: 500 if there is an error fetching graphs"
				}
			],
			"endTime": 1733271324204,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/backend/getGraphs.test.ts",
			"startTime": 1733271323891,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["Select File"],
					"duration": 230,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Select File renders the upload file page",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "renders the upload file page"
				},
				{
					"ancestorTitles": ["Select File"],
					"duration": 175,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Select File Upload File Test",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 3,
					"retryReasons": [],
					"status": "passed",
					"title": "Upload File Test"
				},
				{
					"ancestorTitles": ["Select File"],
					"duration": 81,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Select File Upload File Test Fail",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "Upload File Test Fail"
				},
				{
					"ancestorTitles": ["Configure Details"],
					"duration": 175,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Configure Details renders add details stepper",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 3,
					"retryReasons": [],
					"status": "passed",
					"title": "renders add details stepper"
				},
				{
					"ancestorTitles": ["Configure Details"],
					"duration": 197,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Configure Details shows a toast when inputs are empty",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "shows a toast when inputs are empty"
				},
				{
					"ancestorTitles": ["Configure Details"],
					"duration": 180,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Configure Details Toggle Public Button Updates Checked Value",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 3,
					"retryReasons": [],
					"status": "passed",
					"title": "Toggle Public Button Updates Checked Value"
				},
				{
					"ancestorTitles": ["Review and Save"],
					"duration": 279,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Review and Save renders add details stepper",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "renders add details stepper"
				},
				{
					"ancestorTitles": ["Review and Save"],
					"duration": 258,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Review and Save test graph saves and routes to home",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 5,
					"retryReasons": [],
					"status": "passed",
					"title": "test graph saves and routes to home"
				},
				{
					"ancestorTitles": ["Review and Save"],
					"duration": 374,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Review and Save test graph saves and routes to home",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 5,
					"retryReasons": [],
					"status": "passed",
					"title": "test graph saves and routes to home"
				}
			],
			"endTime": 1733271324215,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/UploadFile.test.tsx",
			"startTime": 1733271321206,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["DELETE /api/data/deleteGraph"],
					"duration": 1,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "DELETE /api/data/deleteGraph should return status code: 405 if the method is not DELETE",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return status code: 405 if the method is not DELETE"
				},
				{
					"ancestorTitles": ["DELETE /api/data/deleteGraph"],
					"duration": 1,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "DELETE /api/data/deleteGraph should return status code: 400 if graphID is invalid",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return status code: 400 if graphID is invalid"
				},
				{
					"ancestorTitles": ["DELETE /api/data/deleteGraph"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "DELETE /api/data/deleteGraph should delete a graph and file successfully",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 10,
					"retryReasons": [],
					"status": "passed",
					"title": "should delete a graph and file successfully"
				},
				{
					"ancestorTitles": ["DELETE /api/data/deleteGraph"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "DELETE /api/data/deleteGraph should return status code: 500 if there is an error deleting graphs",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return status code: 500 if there is an error deleting graphs"
				},
				{
					"ancestorTitles": ["DELETE /api/data/deleteGraph"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "DELETE /api/data/deleteGraph should return status code 403 if user does not own the graph",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return status code 403 if user does not own the graph"
				},
				{
					"ancestorTitles": ["DELETE /api/data/deleteGraph"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "DELETE /api/data/deleteGraph should return status code 401 if authorization header is missing",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return status code 401 if authorization header is missing"
				},
				{
					"ancestorTitles": ["DELETE /api/data/deleteGraph"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "DELETE /api/data/deleteGraph should return status code 400 if graphFilePath is invalid",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return status code 400 if graphFilePath is invalid"
				},
				{
					"ancestorTitles": ["DELETE /api/data/deleteGraph"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "DELETE /api/data/deleteGraph should return status code 401 if token verification fails",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 3,
					"retryReasons": [],
					"status": "passed",
					"title": "should return status code 401 if token verification fails"
				}
			],
			"endTime": 1733271324231,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/backend/deleteGraph.test.ts",
			"startTime": 1733271324167,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["PATCH /api/data/updateGraph"],
					"duration": 1,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "PATCH /api/data/updateGraph Should return status code 405 if method is not PATCH",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "Should return status code 405 if method is not PATCH"
				},
				{
					"ancestorTitles": ["PATCH /api/data/updateGraph"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "PATCH /api/data/updateGraph Should return status code 400 if graph ID is missing",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "Should return status code 400 if graph ID is missing"
				},
				{
					"ancestorTitles": ["PATCH /api/data/updateGraph"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "PATCH /api/data/updateGraph Should return status code 401 if authorization header is missing",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "Should return status code 401 if authorization header is missing"
				},
				{
					"ancestorTitles": ["PATCH /api/data/updateGraph"],
					"duration": 1,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "PATCH /api/data/updateGraph Should return status code 404 if graph does not exist",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "Should return status code 404 if graph does not exist"
				},
				{
					"ancestorTitles": ["PATCH /api/data/updateGraph"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "PATCH /api/data/updateGraph Should return status code 400 for updates containing restricted fields",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "Should return status code 400 for updates containing restricted fields"
				},
				{
					"ancestorTitles": ["PATCH /api/data/updateGraph"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "PATCH /api/data/updateGraph Should return status code 403 for unauthorized user",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "Should return status code 403 for unauthorized user"
				},
				{
					"ancestorTitles": ["PATCH /api/data/updateGraph"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "PATCH /api/data/updateGraph Should return status code 400 if update data is missing",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "Should return status code 400 if update data is missing"
				},
				{
					"ancestorTitles": ["PATCH /api/data/updateGraph"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "PATCH /api/data/updateGraph Should update a single field and return a status code 200",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 6,
					"retryReasons": [],
					"status": "passed",
					"title": "Should update a single field and return a status code 200"
				},
				{
					"ancestorTitles": ["PATCH /api/data/updateGraph"],
					"duration": 1,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "PATCH /api/data/updateGraph Should update multiple fields and return a status code 200",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 6,
					"retryReasons": [],
					"status": "passed",
					"title": "Should update multiple fields and return a status code 200"
				},
				{
					"ancestorTitles": ["PATCH /api/data/updateGraph"],
					"duration": 1,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "PATCH /api/data/updateGraph should return status code: 500 if there is an error updating",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 3,
					"retryReasons": [],
					"status": "passed",
					"title": "should return status code: 500 if there is an error updating"
				}
			],
			"endTime": 1733271324233,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/backend/updateGraph.test.tsx",
			"startTime": 1733271324173,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["GET /api/data/getGraph"],
					"duration": 1,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "GET /api/data/getGraph should return 405 for non-GET requests",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return 405 for non-GET requests"
				},
				{
					"ancestorTitles": ["GET /api/data/getGraph"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "GET /api/data/getGraph should return 400 for missing or invalid graphId",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return 400 for missing or invalid graphId"
				},
				{
					"ancestorTitles": ["GET /api/data/getGraph"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "GET /api/data/getGraph should return 404 for non-existent graph",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return 404 for non-existent graph"
				},
				{
					"ancestorTitles": ["GET /api/data/getGraph"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "GET /api/data/getGraph should return 403 for unauthorized access",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return 403 for unauthorized access"
				},
				{
					"ancestorTitles": ["GET /api/data/getGraph"],
					"duration": 1,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "GET /api/data/getGraph should return 404 for non-existent graph file",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return 404 for non-existent graph file"
				},
				{
					"ancestorTitles": ["GET /api/data/getGraph"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "GET /api/data/getGraph should return 200 with graph JSON on success",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return 200 with graph JSON on success"
				},
				{
					"ancestorTitles": ["GET /api/data/getGraph"],
					"duration": 1,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "GET /api/data/getGraph should return 500 on internal error",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "should return 500 on internal error"
				}
			],
			"endTime": 1733271324244,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/backend/getGraphData.test.ts",
			"startTime": 1733271324145,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["POST /api/data/createUser"],
					"duration": 1,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "POST /api/data/createUser It should return status code: 405 if method isn't POST",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "It should return status code: 405 if method isn't POST"
				},
				{
					"ancestorTitles": ["POST /api/data/createUser"],
					"duration": 0,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "POST /api/data/createUser It should return status code: 500 if there was an error creating user in firestore.",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "It should return status code: 500 if there was an error creating user in firestore."
				},
				{
					"ancestorTitles": ["POST /api/data/createUser"],
					"duration": 1,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "POST /api/data/createUser It should create a user and return status code: 200",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "It should create a user and return status code: 200"
				}
			],
			"endTime": 1733271324248,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/backend/createUser.test.ts",
			"startTime": 1733271324046,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["NavBar"],
					"duration": 137,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "NavBar renders NavBar component",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "renders NavBar component"
				},
				{
					"ancestorTitles": ["NavBar"],
					"duration": 146,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "NavBar calls addDiagram when Add New Diagram button is clicked",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "calls addDiagram when Add New Diagram button is clicked"
				},
				{
					"ancestorTitles": ["NavBar"],
					"duration": 20,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "NavBar calls removeDiagram when Remove Diagram button is clicked",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "calls removeDiagram when Remove Diagram button is clicked"
				},
				{
					"ancestorTitles": ["NavBar"],
					"duration": 19,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "NavBar calls router.back when Go Back button is clicked",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "calls router.back when Go Back button is clicked"
				}
			],
			"endTime": 1733271324302,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/GraphNavbar.test.tsx",
			"startTime": 1733271323688,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["ShareButton"],
					"duration": 547,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "ShareButton opens and closes modal",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "opens and closes modal"
				},
				{
					"ancestorTitles": ["ShareButton"],
					"duration": 320,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "ShareButton prevents adding invalid email addresses",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "prevents adding invalid email addresses"
				},
				{
					"ancestorTitles": ["ShareButton"],
					"duration": 343,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "ShareButton shares graph with selected recipients and presets",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "shares graph with selected recipients and presets"
				},
				{
					"ancestorTitles": ["ShareButton"],
					"duration": 325,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "ShareButton handles sharing with presets",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "handles sharing with presets"
				},
				{
					"ancestorTitles": ["ShareButton"],
					"duration": 320,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "ShareButton handles share failure",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "handles share failure"
				},
				{
					"ancestorTitles": ["ShareButton"],
					"duration": 210,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "ShareButton shared graph appears in recipient's shared graphs list",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 4,
					"retryReasons": [],
					"status": "passed",
					"title": "shared graph appears in recipient's shared graphs list"
				},
				{
					"ancestorTitles": ["ShareButton"],
					"duration": 97,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "ShareButton handles email input",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "handles email input"
				},
				{
					"ancestorTitles": ["ShareButton"],
					"duration": 135,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "ShareButton copies URL to clipboard",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "copies URL to clipboard"
				},
				{
					"ancestorTitles": ["ShareButton"],
					"duration": 84,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "ShareButton removes email from list",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "removes email from list"
				},
				{
					"ancestorTitles": ["ShareButton"],
					"duration": 89,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "ShareButton unshares graph from existing user",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 3,
					"retryReasons": [],
					"status": "passed",
					"title": "unshares graph from existing user"
				}
			],
			"endTime": 1733271324752,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/Share.test.tsx",
			"startTime": 1733271321228,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["Home page Component"],
					"duration": 282,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Home page Component renders the home page when authenticated",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 3,
					"retryReasons": [],
					"status": "passed",
					"title": "renders the home page when authenticated"
				},
				{
					"ancestorTitles": ["Home page Component"],
					"duration": 573,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Home page Component renders the mock graph data in the home page",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 6,
					"retryReasons": [],
					"status": "passed",
					"title": "renders the mock graph data in the home page"
				},
				{
					"ancestorTitles": ["Home page Component"],
					"duration": 1258,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Home page Component opens the share modal when the Share button is clicked",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 5,
					"retryReasons": [],
					"status": "passed",
					"title": "opens the share modal when the Share button is clicked"
				},
				{
					"ancestorTitles": ["Home page Component"],
					"duration": 415,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Home page Component closes the share modal when the cancel button is clicked",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "closes the share modal when the cancel button is clicked"
				},
				{
					"ancestorTitles": ["Home page Component"],
					"duration": 48,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Home page Component renders the public visibility toggles correctly",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 4,
					"retryReasons": [],
					"status": "passed",
					"title": "renders the public visibility toggles correctly"
				},
				{
					"ancestorTitles": ["Home page Component"],
					"duration": 87,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Home page Component renders the Select elements with correct options",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "renders the Select elements with correct options"
				},
				{
					"ancestorTitles": ["Error Handling"],
					"duration": 7,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Error Handling it doesn't load graphs when not authenticated",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 6,
					"retryReasons": [],
					"status": "passed",
					"title": "it doesn't load graphs when not authenticated"
				},
				{
					"ancestorTitles": ["Error Handling"],
					"duration": 32,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Error Handling handles errors when fetching graphs",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 3,
					"retryReasons": [],
					"status": "passed",
					"title": "handles errors when fetching graphs"
				},
				{
					"ancestorTitles": ["Loading Screen Component"],
					"duration": 8,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Loading Screen Component it shows loading screen",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "it shows loading screen"
				}
			],
			"endTime": 1733271325033,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/Index.test.tsx",
			"startTime": 1733271321206,
			"status": "passed",
			"summary": ""
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["Shared With Me Page Component"],
					"duration": 318,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Shared With Me Page Component renders the home page",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 3,
					"retryReasons": [],
					"status": "passed",
					"title": "renders the home page"
				},
				{
					"ancestorTitles": ["Shared With Me Page Component"],
					"duration": 589,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Shared With Me Page Component renders the mock graph data in the home page",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 6,
					"retryReasons": [],
					"status": "passed",
					"title": "renders the mock graph data in the home page"
				},
				{
					"ancestorTitles": ["Shared With Me Page Component"],
					"duration": 91,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Shared With Me Page Component displays the correct owner names for the shared graphs",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "displays the correct owner names for the shared graphs"
				},
				{
					"ancestorTitles": ["Shared With Me Page Component"],
					"duration": 1153,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Shared With Me Page Component opens the share modal when the Share button is clicked",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 4,
					"retryReasons": [],
					"status": "passed",
					"title": "opens the share modal when the Share button is clicked"
				},
				{
					"ancestorTitles": ["Shared With Me Page Component"],
					"duration": 427,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Shared With Me Page Component closes the share modal when the cancel button is clicked",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 3,
					"retryReasons": [],
					"status": "passed",
					"title": "closes the share modal when the cancel button is clicked"
				},
				{
					"ancestorTitles": ["Shared With Me Page Component"],
					"duration": 31,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Shared With Me Page Component renders the public visibility toggles correctly",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 4,
					"retryReasons": [],
					"status": "passed",
					"title": "renders the public visibility toggles correctly"
				},
				{
					"ancestorTitles": ["Shared With Me Page Component"],
					"duration": 88,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Shared With Me Page Component renders the Select elements with correct options",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 2,
					"retryReasons": [],
					"status": "passed",
					"title": "renders the Select elements with correct options"
				},
				{
					"ancestorTitles": ["Shared With Me Page Component"],
					"duration": 7,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Shared With Me Page Component it doesn't load graphs when not authenticated",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 5,
					"retryReasons": [],
					"status": "passed",
					"title": "it doesn't load graphs when not authenticated"
				},
				{
					"ancestorTitles": ["Shared With Me Page Component"],
					"duration": 36,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Shared With Me Page Component handles errors when fetching shared graphs",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 3,
					"retryReasons": [],
					"status": "passed",
					"title": "handles errors when fetching shared graphs"
				},
				{
					"ancestorTitles": ["Loading Screen Component"],
					"duration": 7,
					"failureDetails": [],
					"failureMessages": [],
					"fullName": "Loading Screen Component it shows loading screen",
					"invocations": 1,
					"location": null,
					"numPassingAsserts": 1,
					"retryReasons": [],
					"status": "passed",
					"title": "it shows loading screen"
				}
			],
			"endTime": 1733271325060,
			"message": "",
			"name": "/Users/terry/UofT/csc301/project-19-Machine-Learning-Group/frontend/__tests__/SharedWithMe.test.tsx",
			"startTime": 1733271321206,
			"status": "passed",
			"summary": ""
		}
	],
	"wasInterrupted": false
}
